openapi: 3.0.1
info:
  title: CaffShop
  description: 'Caff Shop'
  version: 1.0.0
servers:
- url: https://localhost:8080/
- url: http://localhost:8080/
tags:
- name: user
  description: Operations about user
- name: caff
  description: Operations about caffs
- name: comment
  description: Operations about comments

paths:
  /user:
    get:
      tags:
      - user
      summary: Get users
      parameters:
      - name: page
        in: query
        description: Page
        required: false
        schema:
          type: integer
          format: int64
      - name: perpage
        in: query
        description: Perpage
        required: false
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Requested user data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - jwt: []
  /user/{username}:
    get:
      tags:
      - user
      summary: Get user data
      parameters:
      - name: username
        in: path
        description: Username
        required: true
        schema:
          type: string
      responses:
        200:
          description: Requested user data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserData'
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: User not found
      security:
        - jwt: []
    delete:
      tags:
      - user
      summary: Delete user
      parameters:
      - name: username
        in: path
        description: Username
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful user removal
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: User not found
      security:
        - jwt: []
  /user/register:
    post:
      tags:
      - user
      summary: Register a new user
      requestBody:
        description: User to be registered
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
        required: true
      responses:
        201:
          description: Successful registration
        400:
          description: Failed registration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/login:
    post:
      tags:
      - user
      summary: Log in a user
      requestBody:
        description: User to be logged in
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
        required: true
      responses:
        200:
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResult'
        400:
          description: Failed login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/logout:
    post:
      tags:
      - user
      summary: Log out a user
      responses:
        200:
          description: Successful logout
        400:
          description: Failed logout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - jwt: []
  /user/password:
    post:
      tags:
      - user
      summary: Modify password
      requestBody:
        description: New password and if requested by an admin than the username too
        content:
          application/json:
            schema:
             $ref: '#/components/schemas/ModifyPassword'
        required: true
      responses:
        200:
          description: Successful password modification
        400:
          description: Failed password modification
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - jwt: []

  /caff/{id}:
    get:
      tags:
      - caff
      summary: Get caff data
      parameters:
      - name: id
        in: path
        description: Caff id
        required: true
        schema:
          type: string
      responses:
        200:
          description: Requested caff
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Caff'
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Caff not found
      security:
        - jwt: []
    delete:
      tags:
      - caff
      summary: Delete caff
      parameters:
      - name: id
        in: path
        description: Caff id
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful caff removal
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Caff not found
      security:
        - jwt: []
  /caff/search:
    get:
      tags:
      - caff
      summary: Get caffs by search criteria
      parameters:
      - name: searchTerm
        in: query
        description: Search term
        required: false
        schema:
          type: string
      - name: username
        in: query
        description: Username
        required: false
        schema:
          type: string
      - name: uploaderName
        in: query
        description: Uploader name
        required: false
        schema:
          type: string
      - name: creationDate
        in: query
        description: Creation date
        required: false
        schema:
          type: integer
          format: int64
      - name: uploadDate
        in: query
        description: Upload date
        required: false
        schema:
          type: integer
          format: int64
      - name: page
        in: query
        description: Page
        required: false
        schema:
          type: integer
          format: int64
      - name: perpage
        in: query
        description: Perpage
        required: false
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Found caffs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaffList'
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - jwt: []
  /caff/upload:
    post:
      tags:
      - caff
      summary: Upload caff
      requestBody:
        description: File to upload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaffRaw'
        required: true
      responses:
        201:
          description: Successful caff upload
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - jwt: []
  /caff/download/{id}:
    get:
      tags:
      - caff
      summary: Download caff
      parameters:
      - name: id
        in: path
        description: Caff id
        required: true
        schema:
          type: string
      responses:
        200:
          description: Requested caff
          content:
            application/caff:
              schema:
                $ref: '#/components/schemas/CaffRaw'
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Caff not found
      security:
        - jwt: []

  /comment:
    get:
      tags:
      - comment
      summary: Get comments
      parameters:
      - name: caffId
        in: query
        description: Caff id
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: Page
        required: false
        schema:
          type: integer
          format: int64
      - name: perpage
        in: query
        description: Perpage
        required: false
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Comments connected to caff
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommentList'
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - jwt: []
    post:
      tags:
      - comment
      summary: Post comment
      requestBody:
        description: Comment to post
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentToCreate'
      responses:
        201:
          description: Successful comment creation
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - jwt: []
    delete:
      tags:
      - comment
      summary: Delete comment
      parameters:
      - name: caffId
        in: query
        description: Caff id
        required: true
        schema:
          type: string
      - name: commentId
        in: query
        description: Page
        required: false
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successful comment removal
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - jwt: []


components:
  schemas:
    Error:
      type: object
      properties:
        errorId:
          type: integer
          format: int64
        errorMessage:
          type: string
    UserCredentials:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    LoginResult:
      type: object
      properties:
        token:
          type: string
        expire:
          type: integer
          format: int64
    ModifyPassword:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    UserData:
      type: object
      properties:
        username:
          type: string
        isAdmin:
          type: boolean
        regDate:
          type: integer
          format: int64
    UserList:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserData'
        totalPages:
          type: integer
          format: int64
    CaffList:
      type: object
      properties:
        caffs:
          type: array
          items:
            $ref: '#/components/schemas/Caff'
        totalPages:
          type: integer
          format: int64
    Caff:
      type: object
      properties:
        id:
          type: string
        numOfCiffs:
          type: integer
          format: int64
        creationDate:
          type: integer
          format: int64
        creator:
          type: string
        uploadDate:
          type: integer
          format: int64
        uploaderName:
          type: string
        caffName:
          type: string
        caffAnimationImage:
          $ref: '#/components/schemas/CaffAnimationImage'
    CaffAnimationImage:
      type: object
      properties:
        duration:
          type: integer
          format: int64
        width:
          type: integer
          format: int64
        height:
          type: integer
          format: int64
        caption:
          type: string
        tags:
          type: array
          items:
            type: string
        pixelValues:
          type: array
          items:
            type: integer
    CaffRaw:
      type: object
      properties:
        name:
          type: string
        application/caff:
            type: string
            format: binary
    CommentToCreate:
      type: object
      properties:
        caffId:
          type: string
        comment:
          type: string
    CommentList:
      type: object
      properties:
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        totalPages:
          type: integer
          format: int64
    Comment:
      type: object
      properties:
        id:
          type: integer
          format: base64
        caffId:
          type: string
        username:
          type: string
        comment:
          type: string
        date:
          type: integer
          format: base64

  securitySchemes:
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
